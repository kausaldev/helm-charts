{{- if .Values.ui.nextjs.argoCdApplication.create -}}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ include "watch.uiNextjsArgoCdApplicationName" . }}
  namespace: {{ .Values.argoCd.namespace }}
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations:
    argocd-image-updater.argoproj.io/app.pull-secret: pullsecret:{{ .Values.argoCd.namespace }}/{{ .Values.argoCd.imagePullSecret.name }}
    argocd-image-updater.argoproj.io/app.update-strategy: digest # this assumes mutable tags; for immutable tags, better use semver
    argocd-image-updater.argoproj.io/image-list: app={{ .Values.ui.nextjs.image.repository }}:{{ .Values.ui.nextjs.image.tag }}
spec:
  project: default
  source:
    repoURL: {{ .Values.helmChartRepoUrl }}
    path: {{ .Values.ui.nextjs.helmChartRepoPath }}
    targetRevision: {{ .Values.ui.nextjs.helmChartRepoTargetRevision }}
    helm:
      values: |-
        fullnameOverride: nextjs
        replicaCount: 3
        image:
          repository: "{{ .Values.ui.nextjs.image.repository }}"
          tag: "{{ .Values.ui.nextjs.image.tag }}"
          pullPolicy: "{{ .Values.ui.nextjs.image.pullPolicy }}"
        imagePullSecrets:
          - name: {{ include "watch.imagePullSecretName" . }}
        configmap:
          data:
            APLANS_API_BASE_URL: https://{{ include "watch.backendApiHost" . }}/v1
            DEPLOYMENT_TYPE: "{{ .Values.deploymentType }}"
            NEXT_PUBLIC_API_URL: https://{{ include "watch.backendApiHost" . }}/v1
            NEXT_PUBLIC_DEPLOYMENT_TYPE: "{{ .Values.deploymentType }}"
            {{- if .Values.ui.nextjs.sentry.enabled }}
            SENTRY_DSN: "{{ .Values.ui.nextjs.sentry.dsn }}"
            SENTRY_ORG: "{{ .Values.ui.nextjs.sentry.org }}"
            SENTRY_PROJECT: "{{ .Values.ui.nextjs.sentry.project }}"
            SENTRY_URL: "{{ .Values.ui.nextjs.sentry.url }}"
            SENTRY_AUTH_TOKEN: "{{ .Values.ui.nextjs.sentry.authToken }}"
            {{- end }}
        ingress:
          enabled: true
          annotations:
            cert-manager.io/cluster-issuer: lets-encrypt
            external-dns.alpha.kubernetes.io/target: {{ .Values.ui.nextjs.ingress.externalDnsTarget }}
            # admin.watch.kausal.dev, used by backend-ingress, must have higher priority than *.watch.test.kausal.dev.
            # So set the priority of this rule as low as possible. (The value 0 would make Traefik use string length.)
            traefik.ingress.kubernetes.io/router.priority: "1"
          hosts:
            - host: "{{ include "watch.uiDeploymentHost" . }}"
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - hosts:
                - "{{ include "watch.uiDeploymentHost" . }}"
              secretName: {{ include "watch.uiIngressTlsSecretName" . }}

  destination:
    server: 'https://kubernetes.default.svc'
    namespace: {{ .Release.Namespace }}
  {{- if .Values.ui.nextjs.argoCdApplication.enableAutoSync }}
  syncPolicy:
    automated:
      prune: true
  {{- end }}
{{- end -}}
